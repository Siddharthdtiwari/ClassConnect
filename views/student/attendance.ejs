<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>My Attendance</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet" />
  <style>
    body {
      font-family: "Inter", sans-serif;
    }

    .bg-brand-background {
      background-color: #f3f4f6;
      background-image: linear-gradient(120deg, #f3e8ff 0%, #eef2f3 100%);
    }

    .text-brand-purple {
      color: #5d3a9b;
    }

    .border-brand-purple {
      border-color: #5d3a9b;
    }

    .btn-outline-purple {
      color: #5d3a9b;
      border: 1px solid #5d3a9b;
      font-weight: 600;
      transition: background-color 0.3s ease, color 0.3s ease,
        border-color 0.3s ease;
      border-radius: 0.5rem;
    }

    .btn-outline-purple:hover,
    .btn-outline-purple.active {
      background-color: #bde045;
      color: #333;
      border-color: #bde045;
    }

    .calendar-grid {
      display: grid;
      grid-template-columns: repeat(7, 1fr);
      gap: 0.5rem;
    }

    .calendar-day {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 3rem;
      border-radius: 50%;
      transition: background-color 0.2s;
    }

    .day-present {
      background-color: #dcfce7;
      color: #166534;
    }

    .day-absent {
      background-color: #fee2e2;
      color: #991b1b;
    }

    .day-holiday {
      background-color: #e0e7ff;
      color: #3730a3;
    }

    .day-today {
      border: 2px solid #5d3a9b;
    }
  </style>
</head>
<%- include('../partials/background') %>

<body class="text-gray-800">
  <div class="content-container container mx-auto p-4 sm:p-6 lg:p-8 min-h-screen">
    <header class="mb-8">
      <a href="/student/dashboard" class="text-sm text-brand-purple hover:underline mb-2 block">&larr; Back to Dashboard</a>
      <h1 class="text-3xl md:text-4xl font-bold text-gray-900">
        My Attendance
      </h1>
      <p class="text-gray-600 mt-1">Track your attendance record.</p>
    </header>

    <div class="bg-white p-6 sm:p-8 rounded-xl shadow-lg">
      <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
        <div class="lg:col-span-1">
          <div class="bg-gray-50 p-6 rounded-xl h-full sticky top-8 border">
            <h2 id="stats-title" class="text-2xl font-bold text-gray-900 mb-4">
              Overall Stats
            </h2>
            <div class="relative w-32 h-32 mx-auto mb-6">
              <svg class="w-32 h-32">
                <circle cx="60" cy="60" r="54" stroke="#e5e7eb" stroke-width="12" fill="none"></circle>
                <circle id="attendance-progress" cx="60" cy="60" r="54" stroke="#10b981" stroke-width="12" fill="none" stroke-linecap="round" transform="rotate(-90 60 60)"></circle>
              </svg>
              <div id="attendance-percentage" class="absolute inset-0 flex items-center justify-center text-2xl font-bold text-gray-800">
                0%
              </div>
            </div>
            <p class="text-center text-gray-600 mt-2">Attendance</p>

            <div class="space-y-3 text-sm">
              <div class="flex justify-between">
                <span class="text-gray-600">Total Classes:</span>
                <span id="total-classes" class="font-semibold">--</span>
              </div>
              <div class="flex justify-between">
                <span class="text-gray-600">Attended:</span>
                <span id="attended-classes" class="font-semibold text-green-600">--</span>
              </div>
              <div class="flex justify-between">
                <span class="text-gray-600">Absent:</span>
                <span id="absent-classes" class="font-semibold text-red-600">--</span>
              </div>
            </div>
            <div class="border-t border-gray-200 my-6"></div>
            <h3 class="text-lg font-bold text-gray-900 mb-4">Legend</h3>
            <div class="space-y-3 text-sm">
              <div class="flex items-center">
                <div class="w-4 h-4 rounded-full day-present mr-3"></div>
                Present
              </div>
              <div class="flex items-center">
                <div class="w-4 h-4 rounded-full day-absent mr-3"></div>
                Absent
              </div>
              <div class="flex items-center">
                <div class="w-4 h-4 rounded-full day-holiday mr-3"></div>
                Holiday
              </div>
              <div class="flex items-center">
                <div class="w-4 h-4 rounded-full border-2 border-brand-purple mr-3"></div>
                Today
              </div>
            </div>
          </div>
        </div>

        <div class="lg:col-span-2">
          <div class="flex items-center justify-between mb-6">
            <button id="prev-month" class="p-2 rounded-full hover:bg-gray-100">
              &larr;
            </button>
            <h2 id="month-year" class="text-2xl font-bold text-gray-900"></h2>
            <button id="next-month" class="p-2 rounded-full hover:bg-gray-100">
              &rarr;
            </button>
          </div>
          <div class="calendar-grid font-semibold text-gray-500 mb-2">
            <div>Sun</div>
            <div>Mon</div>
            <div>Tue</div>
            <div>Wed</div>
            <div>Thu</div>
            <div>Fri</div>
            <div>Sat</div>
          </div>
          <div id="calendar-body" class="calendar-grid"></div>
        </div>
      </div>
    </div>
  </div>
  <div id="attendance" data-attendance='<%- JSON.stringify(attendanceData.overall || {}) %>'></div>

  <script>
    const attendanceEl = document.getElementById("attendance");
    const attendanceData = JSON.parse(attendanceEl.dataset.attendance);
    console.log(attendanceData);
    const calendarBody = document.getElementById("calendar-body");
    const monthYearEl = document.getElementById("month-year");
    const prevMonthBtn = document.getElementById("prev-month");
    const nextMonthBtn = document.getElementById("next-month");

    const statsTitleEl = document.getElementById("stats-title");
    const attendancePercentageEl = document.getElementById(
      "attendance-percentage"
    );
    const totalClassesEl = document.getElementById("total-classes");
    const attendedClassesEl = document.getElementById("attended-classes");
    const absentClassesEl = document.getElementById("absent-classes");

    let currentDate = new Date();

    function updateStats() {
      const statuses = Object.values(attendanceData);
      const attended = statuses.filter((s) => s === "present").length;
      const absent = statuses.filter((s) => s === "absent").length;
      const total = attended + absent;
      const percentage = total > 0 ? Math.round((attended / total) * 100) : 0;

      statsTitleEl.textContent = `Overall Stats`;
      totalClassesEl.textContent = total;
      attendedClassesEl.textContent = attended;
      absentClassesEl.textContent = absent;

      const circle = document.getElementById("attendance-progress");
      const textEl = document.getElementById("attendance-percentage");
      const radius = circle.r.baseVal.value;
      const circumference = 2 * Math.PI * radius;

      circle.style.strokeDasharray = circumference;
      circle.style.strokeDashoffset = circumference;

      if (percentage <= 33) circle.style.stroke = "#f87171";
      else if (percentage <= 66) circle.style.stroke = "#fbbf24";
      else circle.style.stroke = "#34d399";

      let currentOffset = circumference;
      let currentPercent = 0;
      const targetOffset = circumference - (percentage / 100) * circumference;
      const frames = 60;
      const step = (circumference - targetOffset) / frames;

      function animate() {
        currentOffset -= step;
        currentPercent += percentage / frames;
        if (currentOffset < targetOffset) {
          currentOffset = targetOffset;
          currentPercent = percentage;
        }
        circle.style.strokeDashoffset = currentOffset;
        textEl.textContent = `${Math.round(currentPercent)}%`;
        if (currentPercent < percentage) requestAnimationFrame(animate);
      }

      animate();
    }

    function renderCalendar() {
      const year = currentDate.getFullYear();
      const month = currentDate.getMonth();

      monthYearEl.textContent = `${currentDate.toLocaleString("default", {
          month: "long",
        })} ${year}`;
      calendarBody.innerHTML = "";

      const firstDay = new Date(year, month, 1).getDay();
      const daysInMonth = new Date(year, month + 1, 0).getDate();

      for (let i = 0; i < firstDay; i++)
        calendarBody.innerHTML += `<div></div>`;
      for (let day = 1; day <= daysInMonth; day++) {
        const dayEl = document.createElement("div");
        dayEl.textContent = day;
        dayEl.classList.add("calendar-day");

        const monthPadded = String(month + 1).padStart(2, "0");
        const dayPadded = String(day).padStart(2, "0");
        const dateKey = `${year}-${monthPadded}-${dayPadded}`;

        const status = attendanceData[dateKey];
        if (status) dayEl.classList.add(`day-${status}`);

        const today = new Date();
        if (
          day === today.getDate() &&
          month === today.getMonth() &&
          year === today.getFullYear()
        ) {
          dayEl.classList.add("day-today");
        }

        calendarBody.appendChild(dayEl);
      }

      updateStats();
    }

    prevMonthBtn.addEventListener("click", () => {
      currentDate.setMonth(currentDate.getMonth() - 1);
      renderCalendar();
    });

    nextMonthBtn.addEventListener("click", () => {
      currentDate.setMonth(currentDate.getMonth() + 1);
      renderCalendar();
    });

    renderCalendar();
  </script>
</body>

</html>