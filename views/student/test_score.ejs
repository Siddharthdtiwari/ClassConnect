<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Test Scores</title>
    <!-- Tailwind CSS CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Google Fonts: Inter -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        /* Custom styles to extend Tailwind */
        body {
            font-family: 'Inter', sans-serif;
        }

        /* Color palette from login page and logo */
        .bg-brand-background {
            background-color: #f3f4f6;
            /* A light gray as a fallback */
            background-image: linear-gradient(120deg, #f3e8ff 0%, #eef2f3 100%);
        }

        .text-brand-purple {
            color: #5d3a9b;
        }

        .border-brand-purple {
            border-color: #5d3a9b;
        }

        .bg-brand-lime {
            background-color: #bde045;
        }

        /* Button Styles */
        .btn-outline-purple {
            color: #5d3a9b;
            border: 1px solid #5d3a9b;
            font-weight: 600;
            transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
            border-radius: 0.5rem;
        }

        .btn-outline-purple:hover,
        .btn-outline-purple.active {
            background-color: #bde045;
            color: #333;
            border-color: #bde045;
        }

        /* Test score item style */
        .score-item:hover {
            background-color: #f9fafb;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        }

        /* Progress bar colors */
        .progress-bar-good {
            background-color: #84cc16;
        }

        /* lime-500 */
        .progress-bar-average {
            background-color: #facc15;
        }

        /* yellow-400 */
        .progress-bar-poor {
            background-color: #ef4444;
        }

        /* red-500 */
    </style>
</head>
<%- include('../partials/background') %>

    <body class="text-gray-800">

        <!-- Main Container -->
        <div class="content-container container mx-auto p-4 sm:p-6 lg:p-8 min-h-screen">

            <!-- Header -->
            <header class="mb-8">
                <a href="/student/dashboard" class="text-sm text-brand-purple hover:underline mb-2 block">&larr; Back to
                    Dashboard</a>
                <h1 class="text-3xl md:text-4xl font-bold text-gray-900">My Test Scores</h1>
                <p class="text-gray-600 mt-1">Review your performance and points earned in each subject.</p>
            </header>

            <!-- Main Content Area -->
            <div class="bg-white p-6 sm:p-8 rounded-xl shadow-lg">

                <!-- Subject Selection Tabs -->
                <div class="mb-8">
                    <h2 class="text-2xl font-bold text-gray-900 mb-4">Subjects</h2>
                    <div id="subject-tabs" class="flex flex-wrap gap-4">
                        <button class="px-6 py-2 btn-outline-purple active" data-subject="overall">Overall</button>
                        <button class="px-6 py-2 btn-outline-purple" data-subject="English">English</button>
                        <button class="px-6 py-2 btn-outline-purple" data-subject="Maths I">Maths I</button>
                        <button class="px-6 py-2 btn-outline-purple" data-subject="Maths II">Maths II</button>
                        <button class="px-6 py-2 btn-outline-purple" data-subject="Science I">Science I</button>
                        <button class="px-6 py-2 btn-outline-purple" data-subject="Science II">Science II</button>
                        <button class="px-6 py-2 btn-outline-purple"
                            data-subject="History-Civics">History-Civics</button>
                        <button class="px-6 py-2 btn-outline-purple" data-subject="Geography">Geography</button>
                        <button class="px-6 py-2 btn-outline-purple" data-subject="Hindi">Hindi</button>
                        <button class="px-6 py-2 btn-outline-purple" data-subject="Marathi">Marathi</button>
                    </div>
                </div>

                <!-- Scores Display Area -->
                <div id="scores-area">
                    <p class="text-gray-500">Select a subject to view scores.</p>
                </div>

            </div>
        </div>

        <!-- Hidden div to pass scores from server -->
        <div id="scores-data" data-scores='<%- JSON.stringify(scoresBySubject) %>'></div>

        <script>
            document.addEventListener('DOMContentLoaded', function () {
                const subjectTabsContainer = document.getElementById('subject-tabs');
                const scoresArea = document.getElementById('scores-area');
                const scoresData = JSON.parse(document.getElementById('scores-data').dataset.scores);

                function getProgressBarColor(percentage) {
                    if (percentage >= 80) return 'progress-bar-good';
                    if (percentage >= 50) return 'progress-bar-average';
                    return 'progress-bar-poor';
                }

                function renderScores(subject) {
                    let tests = [];

                    if (subject === 'overall') {
                        // Combine all subjects into one array
                        for (let key in scoresData) {
                            tests = tests.concat(scoresData[key]);
                        }
                    } else {
                        tests = scoresData[subject] || [];
                    }

                    if (!tests.length) {
                        scoresArea.innerHTML = `<p class="text-gray-500">No scores available for this subject yet.</p>`;
                        return;
                    }

                    const html = `
        <h3 class="text-xl font-bold text-gray-800 mb-4">${subject === 'overall' ? 'Overall Scores' : subject}</h3>
        <div class="space-y-4">
            ${tests.map(test => {
                        const percentage = ((test.score / (test.total || 100)) * 100).toFixed(2);
                        const colorClass = getProgressBarColor(percentage);
                        return `
                    <div class="score-item bg-white p-4 rounded-lg border border-gray-200 grid grid-cols-1 md:grid-cols-4 gap-4 items-center">
                        <div class="md:col-span-2">
                            <p class="font-semibold text-gray-800"> ${test.testName} - ${test.subject} (${test.topic || 'No topic'}) </p>
                            ${test.questionPaper ? `<a href="${test.questionPaper}" class="text-sm text-blue-600 hover:underline" target="_blank">Download Question Paper</a>` : ''}
                        </div>
                        <div class="w-full bg-gray-200 rounded-full h-2.5">
                            <div class="${colorClass} progress-bar h-2.5 rounded-full" style="width:0%"></div>
                        </div>
                        <div class="text-right">
                            <p class="text-xl font-bold text-brand-purple">${test.score} / ${test.total || 100}</p>
                            <p class="text-sm font-medium text-gray-500">${percentage}%</p>
                        </div>
                    </div>
                `;
                    }).join('')}
        </div>
    `;
                    scoresArea.innerHTML = html;

                    // Animate progress bars
                    const bars = scoresArea.querySelectorAll('.progress-bar');
                    bars.forEach((bar, i) => {
                        const test = tests[i];
                        const percentage = ((test.score / (test.total || 100)) * 100).toFixed(2);
                        setTimeout(() => bar.style.width = `${percentage}%`, 100);
                    });
                }




                // Button click handler
                subjectTabsContainer.addEventListener('click', e => {
                    if (e.target.tagName === 'BUTTON') {
                        subjectTabsContainer.querySelectorAll('button').forEach(btn => btn.classList.remove('active'));
                        e.target.classList.add('active');
                        renderScores(e.target.dataset.subject);
                    }
                });

                // Initial render based on first active button
                const firstActiveButton = subjectTabsContainer.querySelector('button.active');
                if (firstActiveButton) renderScores(firstActiveButton.dataset.subject);
            });
        </script>

    </body>


</html>